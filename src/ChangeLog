2004-04-06  Duncan Mak  <duncan@ximian.com>

	* graphics.c (make_arc): use fequals instead of ==.

	* gdip.h (EPSILON): define it here to be used by floating point
	comparisons.
	(fequals): A macro for comparing 2 FP numbers with EPSILON.

2004-04-06  Vladimir Vukicevic  <vladimir@pobox.com>

	* gdip.h: Added stream handling delegate prototypes,
	and some missing function protos

	* gdipImage.h: stream delegate loading/saving functions

	* image.c: stream loading/saving bits, implemented
	via linux-specific delegates.  Added guids for various
	file formats, and a gdip_image_format_for_clsid()
	helper function

	* jpegcodec.c: supports reading from a stream

	* pngcodec.c: supports writing; also supports
	reading/writing with a stream

	* image.c: blit surface directly for painting images,
	instead of creating a graphics context for it first

	* gifcodec.c, jpegcodec.c, pngcodec.c, tifcodec.c:
	Write data with the correct flags and resolution bits,
	to (almost) match what win32 outputs

2004-04-04  Vladimir Vukicevic  <vladimir@pobox.com>

	* gifcodec.c, tiffcodec.c, pngcodec.c: include config.h, which
	actually enables this code.. so that the glaring bugs as a result
	of it never having been compiled before can be fixed. *cough*

	* image.c (GdipDrawImageRectI): do correct scaling
	if source and dest width/height don't match.
	(GdipLoadImageFromFile): fseek back to the start
	before passing to the loader.

2004-04-04  Vladimir Vukicevic  <vladimir@pobox.com>

	* image.c: Changed loader calls to use correct
	load prototypes

	* pngcodec.c, gifcodec.c: Implemented png and gif loading

	* gdip.h: Changed ColorPalette to match GDI+; Entries is part
	of the allocated struct, not a separate pointer.  Also
	added some ARGB convenience macros.

	* bmpcodec.c, bmpcodec.h: Updated load prototypes to match
	usage

2004-04-04  Vladimir Vukicevic  <vladimir@pobox.com>

	* src/image.c, src/gdip.h: Added GdipDrawImage/DrawImageRect

	* src/jpegcodec.c, src/tiffcodec.c: Implemented loading jpeg and
	tiff images.  Need to test these out on windows, to see exactly
	what formats stuff gets retruned in, but I think we should be ok
	for the most common cases.  No file saving yet.
	
	* src/bmpcodec.c, src/gifcodec.c, src/pngcodec.c:
	Remove calls to bogus (and undefined) gdip_image_new()

2004-04-04  Duncan Mak  <duncan@ximian.com>

	* graphics.c (make_curve): Renamed from
	gdip_make_closed_curve. Added a new _CurveType argument.
	(convert_points): Moved to general.c, as it's used in
	graphics-path.c as well.

	* graphics-path.c (append_curve): Add a _CurveType
	argument. Renamed from gdip_append_closed_curve for consistency.
	(GdipAddPathClosedCurve2I): Hook it up.

	* general.c (convert_points): Moved here from graphics.c
	(gdip_open_curve_tangents): Declare here. No code yet, need to
	investigate end tangents.

	* gdip.h (_CurveType): New (private) enum for distinguishing open
	and close curves.

2004-04-04  Duncan Mak  <duncan@ximian.com>	

	* graphics-path.c (append_arc): Added a new boolean argument. to
	determine if we're continuing an existing curve.

2004-04-04  Duncan Mak  <duncan@ximian.com>	

	* graphics.c (make_arc): Only call move_to when we're not already at
	that point. This fixes FillPie, as cairo_fill implicitly closes
	all subpaths before filling. The extraneous move_to call earlier
	was causing Cairo to close early.
	(make_pie): Removed the debug messages.	

2004-04-02  Duncan Mak  <duncan@ximian.com>

	* graphics.c (make_pie, GdipDrawArc): If the delta is greater than
	or equal to 360 degrees, then we're effectively drawing an
	ellipse, so make it do so.

2004-04-02  Duncan Mak  <duncan@ximian.com>

	* graphics.c (GdipFillPieI, GdipDrawPieI): Instead of having
	another copy of the code, just use the float equivalent.
	(GdipDrawPie): Add restore/save pair.
	(make_pie): This is broken right now. Added some debugging
	messages.

2004-04-01  Duncan Mak  <duncan@ximian.com>

	* graphics.c (GdipFillClosedCurve, GdipFillClosedCurveI):
	Implemented.

2004-04-02  Ravindra <rkumar@novell.com>
	* texturebrush.c: Implemented TileFlipXY wrapmode.

2004-04-01  Duncan Mak  <duncan@ximian.com>

	* graphics.c (convert_points): New helper function to turn a list
	of GpPoints into GpPointFs.
	(GdipDrawClosedCurveI): Implemented using convert_points, then
	just call GdipDrawClosedCurve.

2004-04-01  Duncan Mak  <duncan@ximian.com>	

	Implemented drawing ClosedCurves in Graphics and GraphicsPath. 

	These functions are implemented with the help of Prof. Rasala at
	Northeastern University. The algorithm is described in:

	     Richard Rasala, Explicit Cubic Spline Interpolation Formulas,
	     in Andrew S. Glassner, Graphics Gems, Academic Press, 1990,
	     579-584.

	Remaining TODO: Finish open curves and consider tension.
	
	* graphics.c (gdip_make_closed_curve): Translates vertices
	and tangents for cairo_curve_to.
	(GdipDrawClosedCurve): Implemented.

	* graphics-path.c (gdip_append_closed_curve): Translates vertices
	and tangents into append_bezier.
	(GdipAddPathClosedCurve2): Implemented.

2004-04-01  Duncan Mak  <duncan@ximian.com>	

	* gdip.h: Added the new functions for calculating tangents.
	(CURVE_MIN_TERMS, CURVE_MAX_TERMS): Constants used in tangent
	calculations.

	* general.c (gdip_calculate_coefficients) 
	(gdip_closed_curve_tangents): Two helper functions for drawing
	closed curves.

2004-03-30  Sanjay Gupta <gsanjay@novell.com>
	*pngcodec.c Implemented one more method.
	*gdip.h Modified ColorPalette structure.

2004-03-31  Sachin Kumar <skumar1@novell.com>
	* Makefile.am: Updated file to make it work for
	  'make distcheck'.

2004-03-30 Jordi Mas i Hernandez <jordi@ximian.com>
	* image.c - GdipGetImageBounds and fixes
        * bitmap.c - keep the witdh, height and pixel format in sync with the image struct

2004-03-30  Sanjay Gupta <gsanjay@novell.com>
	*pngcodec.c Added crc check
	*pngcodec.h Added crc check

2004-03-28  Sanjay Gupta <gsanjay@novell.com>
	* pngcodec.c implementing png encoder
	* pngcodec.h implementing png encoder

2004-03-26  Duncan Mak  <duncan@ximian.com>

	* graphics.c: Prepare for the Curve and CloseCurve work by
	stubbing out some functions.

	* graphics.c (gdip_plot_path): Fixed the handling of paths
	containing PathPointTypeBezier points. Previously, we were
	resetting the index to zero at the head of each loop, so we were
	never drawing Bezier curves correctly. Also, we need to draw the
	curve immediately once we've stored 3 points, instead of waiting
	till the next iteration (which may never come). This is an
	off-by-one error.

	* graphics-path.c (append_arc): Use floats instead of ints to hold
	the center points, use doubles to hold the trig points.

2004-03-26 Jordi Mas i Hernandez <jordi@ximian.com>
	* image.c - dpis and parameter checking

2004-03-26  Ravindra  <rkumar@novell.com>
	* texturebrush.c: Implemented TileFlipY wrapmode and fixed
	TileFlipX wrapmode.

2004-03-26  Duncan Mak  <duncan@ximian.com>

	* graphics-path.c: Port the changes made to graphics here.
	(append_arc): New function, modeled after make_arc for appending
	arcs (a set of Bezier points) to the Path.
	(GdipAddPathArc): Calculate the middle angle correctly and call
	append_arc.
	(GdipAddPathPie): Removed duplication, call append_arc
	appropriately.

2004-03-26  Duncan Mak  <duncan@ximian.com>
	
	* graphics.c (make_arc): Use the end angle instead of the sweep
	angle.  Previously, the code was misbehaving because I used the
	sweep angle as the end angle.
	(make_pie, DrawArc): Determine the middle angle correctly in cases
	where the delta > 180. Even though this sounds simple, it took a
	long time for me to figure out.
	(make_pie): Simplifed things a bit. Instead of replicating most of
	the arc-drawing algorithm here, use of make_arc instead. This reduced
	some of the duplicates in the code.
	(DrawArcI): I'm tired on maintaining so many copies of the same
	code, so just call DrawArc now.

	With this patch, we should be drawing Arcs and Pies correctly.
	
2004-03-25  Ravindra <rkumar@novell.com>
	* texturebrush.[ch]: Fixing texture brush. Still needs
	some work.

2004-03-24  Jordi Mas i Hernandez <jordi@ximian.com>
	* imageattributes.c - created and first methods

2004-03-23  Peter Bartok <pbartok@novell.com>
   * gdip_win32.h: Added definitions for Wine X11DRV_ExtEscape function;
                   removed definition and reference to internal wine structures
   * gdip_win32.c: Added import of X11DRV_ExtEscape to allow pulling the X11 Drawable without
                   knowledge of internal structures
   * graphics.c: Now uses the X11DRV_ExtEscape function to retrieve the drawable from Wine
   * general.c: Made x11drvHandle accessible for other source files (needed for X11DRV_ExtEscape)

2004-03-23  Ravindra  <rkumar@novell.com>
	* gdip.h: Changed file format to Unix.

2004-03-22  Jordi Mas i Hernandez <jordi@ximian.com>
	* graphics.c: added GdipFillPieI and GdipFillPie

2004-03-22  Sanjay Gupta <gsanjay@novell.com>
	* gdip.h: Typo error
	* gdipImage.h: Fixed issue because of typo 
	* image.c: Fixed issue because of typo

2004-03-21  Sanjay Gupta <gsanjay@novell.com>
	* Makefile.am: Included codec files.
	* gdip.h: Added few structure definitions.
	* gdipImage.h: Included codecs .h files.
	* image.c: Work on codecs.

2004-03-18  Miguel de Icaza  <miguel@ximian.com>

	* graphics.c (GdipDrawString): Fixed what looked like a typo X and
	Y.  

	(GdipFillPath): Implement this routine.  Factor code
	into gdip_plot_path.

	Stub out a few more routines to avoid crashes when running.

2004-03-18  Peter Bartok <pbartok@novell.com>
   * pen.c: Fixed leak and bug that returned wrong pointer for dash array

2004-03-15  Jordi Mas i Hernandez <jordi@ximian.com>
    * graphics.c - Bug fixing, suport for hotkeys, code reoganisation
    * stringformat.c - string format tab support

2004-03-11  Peter Bartok <pbartok@novell.com>
   * bitmap.c: Added temporary hack to always initialize the bitmap scan (pixel) data (for SWF)

2004-03-10  Ravindra  <rkumar@novell.com>
	* hatchbrush.c: Coding style fixes.

2004-03-10  Ravindra  <rkumar@novell.com>
	* hatchbrush.h: Modified few internal function signatures.
	* hatchbrush.c: Implemented couple of hatching styles.

2004-01-10  Alexandre Pigolkine <pigolkine@gmx.de>
	* bitmap.c
	* gdip.h	GdipBitmapData struct. Memory ownership 
			stored in Reserved field		
	* general.c	small fix
	 
2004-03-08  Ravindra  <rkumar@novell.com>
	* hatchbrush.c: Implemented cross hatch style.
	* hatchbrush.h: Modified a function signature.

2004-03-08  Ravindra  <rkumar@novell.com>
	* solidbrush.c: cairo_set_rgb_color bug fix.
	* hatchbrush.c: cairo_set_rgb_color bug fix.

2004-03-07 Sanjay Gupta <gsanjay@novell.com>
	* gdip.h: Included ImageFlag enum and moved certain enums from
	gdipImage.h
	* gdipImage.h: Moved few enums to gdip.h
	* image.c: Implemented few functions

2004-03-06  Ravindra  <rkumar@novell.com>
	* pen.c: Indentation.
	* solidbrush.c: Coding style.
	* hatchbrush.c: Coding style and removed printf.

2004-03-05  Duncan Mak  <duncan@ximian.com>

	* graphics-path.c (GdipAddPathPath): Fix index, it should be 0,
	not 1.
	(GdipAddPathPolygon): Add a line back to the starting point to
	complete the polygon if the first and last points are not the same.

2004-03-04  Duncan Mak  <duncan@ximian.com>

	* graphics-path.c (GdipAddPathPath): Implemented.

2004-03-04  Jordi Mas i Hernandez <jordi@ximian.com>
    * stringformat.c - DigitSubstitution and TabStob methods

2004-03-03  Miguel de Icaza  <miguel@ximian.com>

	* gdip_win32.c (_load_gdi32, _load_user32): Use the
	_WINE_SHAREDLIB_PATH environment variable to locate our dynamic
	libraries. 

	* general.c (_load_x11drv): Load the library from the special
	location provided by the Wine init function.

2004-03-03  Jordi Mas i Hernandez <jordi@ximian.com>
    * stringformat.c - coding style

2004-03-02  Jordi Mas i Hernandez <jordi@ximian.com>
    * graphics.c - Implemented font strikeout and underline
    * font.c - Implemented font strikeout and underline, allows multiple attributes
    
2004-03-01  Sanjay Gupta <gsanjay@novell.com>
	* bitmap.c: Access modification in Get/Set Pixel()

2004-02-29  Ravindra <rkumar@novell.com>
	* hatchbrush.c: Implemented four vertical hatching styles
	and did few comment improvements.

2004-02-28  Miguel de Icaza  <miguel@ximian.com>

	* font.c: Coding style, ANSI-C-ification

	* Makefile.am: Add -ansi, -pedantic and -Werror, to keep this
	clean.
	
	* bitmap.c (GdipBitmapSetPixel): Optimize SetPixel, remove
	non-ANSI-isms.

	* region.c: Ansi C again.

	* hatchbrush.c: ANSI C again.

	* graphics.c: Clean up the mess in this file:

	Turn into ANSI C: No // for comments;  No variable declarations in
	the middle of a file.

	Fix the coding style (spacing, indentation).

2004-02-28  Sanjay Gupta <gsanjay@novell.com>
	
	* bitmap.c: Implemented GetPixel and SetPixel method.
	* gdip.h: Added declaration for GetPixel and SetPixel method.
	* gdipImage.h: Removed typedef for ARGB

2004-02-27  Ravindra <rkumar@novell.com>
	* hatchbrush.c: First implementation. Implementing only
	four hatching styles as of now. More to be added.
	* hatchbruush.h: Defines hatch struct, hatchstyle enum
	and also declaration for hatch brush functions.
	* Makefile.am: Added hatchbruch.[ch] to sources.

2004-02-26  Ravindra <rkumar@novell.com>
	* graphics.c: Added cairo_save () and cairo_restore ()
	function calls in Draw and Fill functions.

2004-02-25  Jordi Mas i Hernandez <jordi@ximian.com>
    * StringFormat.c - new methods
    * Font.c - PrivateFontCollection methods
    
2004-02-24  Jordi Mas i Hernandez <jordi@ximian.com>
    * font.c - added metrics for font families
    
2004-02-23  Jordi Mas i Hernandez <jordi@ximian.com>
    * graphics.c - added GdipMeasureString
    
2004-02-22  Ravindra <rkumar@novell.com>
	* texturebrush.c: First implementation. Needs some fixing.
	* texturebrush.h: Defines texture struct, wrapmode enum and
	also declaration for texture functions.
	* Makefile.am: Added texturebruch.[ch] to sources.

2004-02-21  Sanjay Gupta <gsanjay@novell.com>
	* gdip.h: Added typedef for UINT
	* Image.h: Added function stubs for image functions
	* gdipImage.h: Added new file containing image function declaration

2004-02-17  Jordi Mas i Hernandez <jordi@ximian.com>
    * fonts.c - remove unnecesary code and fixes

2004-02-17  Jordi Mas i Hernandez <jordi@ximian.com>
    * fonts.c suport for unit conversion
    * general.c - suport for unit conversion
    * graphics.c - single line drawing
    
2004-02-16  Ravindra <rkumar@novell.com>
	* gdip.h: Moved GpStatus enum and GpGraphics struct back
	from brush.h in here. Thanks to Duncan, for pointing this
	out.
	* brush.h: Moved out GpStatus enum and GpGraphics struct
	back to gdip.h.

2004-02-13  Ravindra <rkumar@novell.com>
	* brush.h: Added. For implementing brushes in OO-C, we
	have Brush and BrushClass (vtable) structs defined here 
	and related functions are declared.
	* solidbrush.h: Added. For implementing brushes in OO-C,
	we have SolidBrush struct defined here. Also, solid brush
	functions are declared.
	* gdip.h: Moved out brush functions to brush.h and solidbrush
	functions to solidbrush.h. Also, moved GpStatus enum and 
	GpGraphics struct to brush.h. (This is just to satisfy 
	compiler).
	* brush.c: All functions are modified to call functions from
	vtable.
	* solidbrush.c: new(), init(), setup(), clone() and destroy()
	functions are modified.
	* pen.c: gdip_pen_setup(): Modified to call gdip_brush_setup
	irrespective of brush type.
		GdipCreatePen2(): Added status checks. Now we set color
	also when SolidBrush is in the question. This applies to 
	GdipSetPenBrushFill() method also.
	* stringformat.c: Renaming method gdip_brush_init to
	gdip_stringformat_init. Because the method name is used
	in brush.c.

2004-02-13  Jordi Mas i Hernandez <jordi@ximian.com>
    * fonts.c fixed re-use of the same font, fixed size problems
    * graphics.c - string format, aligment, etc
    * stringformat.c - initial implementation

2004-02-05  Duncan Mak  <duncan@ximian.com>

	* gdip.h (GpRect, GpRectF): Instead of storing coordinates in
	terms of top, left, right, bottom, changed it to use X, Y, Width
	and Height instead. This matches the requirements for GDI+ (Flat
	API and the C++ wrapper) as well as System.Drawing.

	* bitmap.c (GdipBitmapLockBits): 
	* matrix.c (GdipCreateMatrix3, GdipCreateMatrix3I):
	* graphics.c (GdipDrawString): 	
	* graphics-path.c
	(GdipAddPathRectangles, GdipAddPathRectanglesI): Use X,
	Y, Width, Height coordinates instead of the old system.

2004-02-05  Duncan Mak  <duncan@ximian.com>

	* graphics.c: Fixed indentation.

2004-02-05  Jordi Mas i Hernandez <jordi@ximian.com>
	* font.c - first implementation

2004-01-29  Duncan Mak  <duncan@ximian.com>

	* bitmap.c (gdip_bitmap_dispose): Add a check for own_scan0.
	(GdipCreateBitmapFromScan0): Set own_scan0 flag if we own the
	incoming buffer, scan0.

	* gdip.h (GdipBitmapData): Add new field, own_scan0.

2004-01-26  Duncan Mak  <duncan@ximian.com>

	* bitmap.c (GdipCreateBitmapFromScan0): Use GdipAlloc here instead
	of malloc.
	(gdip_bitmap_dispose): Call GdipFree on bitmap->data.scan0 here.

	Jordi did the work for this, not me; I'm just the messenger.

2004-01-26  Duncan Mak  <duncan@ximian.com>	

	* graphics.c (GdipDrawPath): Doh! Added stupid breaks inside the
	switch, so we can draw simple paths (lines) now. For more complex
	curves, the array is holding some NaNs, so I'll need to look into
	that.

	* bitmap.c:
	(GdipCreateBitmapFromScan0): Set allocate memory for scan0 if it
	is NULL. Thanks to Jordi for fixing this, we can now write out to
	a file again.

2004-01-26  Duncan Mak  <duncan@ximian.com>	

	* graphics.c: Use C style comments instead of C++ style.

	* pen.c (clone_dash_array): new helper function.
	(GdipClonePen): Copy matrix and dash_array, removed the FIXME.

2004-01-23  Duncan Mak  <duncan@ximian.com>

	* graphics.c (GdipDrawPath): Implemented.

2004-01-20  Ravindra <rkumar@novell.com>

	* pen.c (GdipGetPenTransform): Fixed function signature, this
	fixes bug #52811.

2004-01-19  Duncan Mak  <duncan@ximian.com>

	* graphics-path.c (GdipGetPathPoints): Fixed.
	(GdipCreatePath): Remember to	initialize the arrays instead of
	just setting them to NULL.
	(GdipGetPathTypes, GdipGetPathPoints): Fix signature.

	* Makefile (local_sources): Add graphics-path.c to the build.

2004-01-13  Duncan Mak  <duncan@ximian.com>

	* matrix.c (GdipCreateMatrix): Use gdip_get_status instead of just
	returning Ok;

2004-01-13  Bernie Solomon  <bernard@ugsolutions.com>

	* graphics-path.c (append): fix struct initialization
	for old fashioned C compilers

2004-01-13  Ravindra <rkumar@novell.com>

	* pen.c: Initialized pen.matrix field to identity matrix.

2004-01-10  Alexandre Pigolkine <pigolkine@gmx.de>
	* bitmap.c 
	* brush.c		cosmetic changes
	* gdip.h		new field added to GpPen structure
	* gdip_win32.h		conditional compilation flag used to reflect changes in Cairo > 0.14
	* graphics.c		restore position in GRAPHICS_STATE stack 
	* matrix.c		order of matrices in GdipMultiplyMatrix changed 
	* pen.c			initialization of fields, protection in GdipDeletePen function added

2003-12-25  Duncan Mak  <duncan@ximian.com>

	* graphics-path.c (GdipAddPathLine): Use append instead of
	append_point.
	(GdipTransformPath): Remember to reset the points after the
	transformation.

2003-12-25  Duncan Mak  <duncan@ximian.com>	

	* graphics.c (DrawBezier, DrawBezierI): Well, it's pretty obvious
	that the code was incorrect before. After Christmas, I'm gonna
	hook up the GraphicsPath code and work on testing and making sure
	this stuff is correct. I'm pretty sure, in a first pass, there are
	lots of littles bugs waiting to be fixed.

	* graphics-path.c (new_point): Removed, we now pack the point
	inside the append functions.
	(append): New function that takes the X, Y coordinates directly.
	(append_bezier): Take coordinates instead of GpPointFs. Use the
	new append function instead of append_point.

2003-12-23  Duncan Mak  <duncan@ximian.com>

	* graphics-path.c:
	* graphics-path.h: Implemented GraphicsPath.

	* Makefile: Added graphics-path.c.

	* gdip.h (GpPathPointType, GpWarpMode): Added.

2003-12-21  Duncan Mak  <duncan@ximian.com>

	* graphics.c (C1): Made it more precise.
	(make_pie): Fixed.
	(make_arc): New helper function for getting the right Bezier for
	an elliptical arc, based on an algorithm found in the
	comp.text.pdf FAQ.

2003-12-02  Bernie Solomon  <bernard@ugsolutions.com>

	* pen.c (GdipSetPenLineCap): fix arg type so it compiles
	using HP compiler.

	* gdip.h: fix spelling of GdipSetPenLineJoin and add
	prototype for GdipGetPenLineJoin

2003-11-28  Duncan Mak  <duncan@ximian.com>

	* brush.c (gdip_brush_setup): Check on the type of the brush and
	delegate the implementation to the concrete Brushes, 
	(GdipCloneBrush, GdipDeleteBrush, GdipGetBrushType): Implemented.

	* gdip.h (DashStyle): Fixed typo.
	(PenAlignment, BrushType): Added new enumerations.
	(GpBrush): Added new type field.
	(GpPen): Added new fields: color, brush, mode, dash_array and
	unit. Updated the header file to include new Pen functions.

	* pen.c (convert_dash_array): Utitlity function for converting
	from a float* from GDI+ to a double* for Cairo.
	(GdipCreatePen2, GdipClonePen): Implemented.
	(PenWidth, BrushFill, Color, PenMode, PenUnit, DashStyle):
	(DashOffset, DashCount, DashArray): Implemented the Get/Set
	function pairs for these properties.
	(GdipGetPenCompoundArray, GdipSetPenCompoundArray):
	(GdipGetPenCompoundArrayCount): Stubbed.

	* solidbrush.c (gdip_solidfill_init): Utility for initializing a
	SolidBrush. Sets type as BrushTypeSolidColor.
	(gdip_solidfill_setup): Moved from gdip_brush_setup.
	(gdip_solidfill_clone): Implementation for GdipCloneBrush for a
	GpSolidFill.
	(GdipSetSolidFillColor, GdipGetSolidFillColor): Implemented.

2003-11-22  Duncan Mak  <duncan@ximian.com>

	* matrix.c (GdipCreateMatrix3, GdipCreateMatrix3I): Implemented.
	(GdipCloneMatrix): Fixed.
	(GdipShearMatrix, set_shear): Implemented.
	
	* graphics.c:
	(GdipGetWorldTransform, GdipMultiplyWorldTransform): Implemented.
	(GdipRotatePenTransform, GdipTranslatePenTransform): Use GDI+
	functions instead.

	* gdip.h
	(GdipRotatePenTransform, GdipTranslatePenTransform): Fix
	signature.
	(GdipCreateMatrix3, GdipCreateMatrix3I): Use const appropriately.
	
2003-11-17  Duncan Mak  <duncan@ximian.com>

	* matrix.c (matrix_equals): New helper function help test matrix
	equality.
	(GdipIsMatrixIdentity, GdipIsMatrixEqual): Use matrix_equals.
	(GdipGetMatrixElements): Don't malloc here, because the caller
	should hand us an allocated array.

2003-11-16  Duncan Mak  <duncan@ximian.com>

	* matrix.c (GdipCreateMatrix2, GdipCreateMatrix3) 
	(GdipCreateMatrix3I): Implemented.

	* pen.c (GdipResetPenTransform):
	(GdipMultiplyPenTransform, GdipTranslatePenTransform):
	(GdipScalePenTransform, GdipRotatePenTransform): Implemented.

	* matrix.c (set_translate, set_scale, set_rotate): Helper
	functions copied from Cairo. We are doing this because you can
	specify the order of multiplcation in GDI+, but not in Cairo.

2003-11-15  Duncan Mak  <duncan@ximian.com>

	* graphics.c: Moved PI and GRADTORAD to gdip.h.
	* gdip.h: Renamed GRADTORAD to DEGTORAD.

	* matrix.c (GdipCloneMatrix): Fix argument order.
	* matrix.c
	(GdipMultiplyMatrix, GdipTranslateMatrix, GdipScaleMatrix):
	(GdipRotateMatrix, GdipInvertMatrix):
	(GdipTransformMatrixPoints, GdipVectorTransformMatrixPoints):
	(GdipSetMatrixElements, GdipGetMatrixElements):
	(GdipIsMatrixInvertible): Implemented.

	* matrix.c (GdipIsMatrixIdentity, GdipIsMatrixEqual): Implemented.

2003-11-14  Duncan Mak  <duncan@ximian.com>	

	* general.c (gdip_get_status): Take cairo_status_t instead of
	cairo_t. We need this because this is used in matrix.c and we only
	have cairo_matrix_t there.
	* graphics.c: Updated calls to gdip_get_status.

	* pen.c
	(convert_line_cap, convert_line_join): Added static keyword.
	(GdipDeletePen): Implemented.

	* matrix.c
	(GdipCreateMatrix2, GdipCloneMatrix, GdipInvertMatrix): Use
	gdip_get_status instead of just returning Ok.
	(GdipRotateMatrix, GdipScaleMatrix, GdipTranslateMatrix):
	Implemented.

2003-11-12  Duncan Mak  <duncan@ximian.com>

	* bitmap.c, brush.c, general.c:
	* graphics.c, image.c, matrix.c:
	* pen.c, solidbrush.c: Use gdip.h instead of gdip_main.h.
	
	* gdip.h: New header file, merged from gdip_main.h and
	gdip_defs.h.

	* gdip_main.h, gdip_defs.h: Removed.

	* pen.c
	(convert_line_join, convert_line_cap): new function for converting
	enumerations between GDI+ and Cairo.
	(gdip_pen_setup): set miter limit and line join.
	(GdipSetPenMiterLimit, GdipGetPenMiterLimit):
	(GdipSetPenLineJoin, GdipGetPenLineJoin): 
	(GdipSetPenLineJoin, GdipGetPenTransform): implemented.	
	
2003-11-12  Alexandre Pigolkine <pigolkine@gmx.de>
	* bitmap.c 		copy image funciton added
	
2003-11-06  Duncan Mak  <duncan@ximian.com>

	* graphics.c (GdipDrawRectangle): Add call to gdip_pen_setup so
	that we stroke with the right color.

2003-11-05  Duncan Mak  <duncan@ximian.com>

	* graphics.c
	(make_pie, make_ellipse, make_polygon): Add static keyword.

	* gdip_defs.h: Update headers to include DrawBezier, DrawBeziers,
	DrawEllipse, DrawPie, DrawPolygon, DrawRectangle, FillEllipse,
	FillPolygon and the RenderingOrigin property.

	* Makefile (install-local): Added missing semi-colons.

2003-11-03  Bernie Solomon <bernard@ugsolutions.com>

	* gdip_main.h, gdip_win32.h, gdip_win32.c:
	fixes for non-GCC compilers

2003-11-02  Alexandre Pigolkine <pigolkine@gmx.de>

	* bitmap.c 		convert 24/32 bpp images in LockBits

2003-11-01  Duncan Mak  <duncan@ximian.com>

	* matrix.c
	(GdipCreateMatrix, GdipCreateMatrix2, GdipCloneMatrix):
	(GdipDeleteMatrix, GdipInvertMatrix): Implemented; the rest of the
	functions are stubbed out.

	* gdip_defs.h (GpMatrixOrder): Added.	

	* gdip_main.h
	(GpRect, GpRectF): Synonyms for Rect and RectF.
	(GpMatrix): An alias of cairo_matrix_t.

	* Makefile: Added matrix.c.

2003-10-28  Duncan Mak  <duncan@ximian.com>

	* gdip_main.h, gdip_def.h:
	Renamed all gdip_foo_ptr types are now GpFoo *.
	Renamed Status to GpStatus.
	Reformatted all C++ style comments to C style comments.
	Reformatted all C function prototypes to the style used by GTK+.

	* gdip_main.h (GpPoint, GpPointF): Added.

	* gdip_defs.h (GpFillMode): Added.

	* graphics.c (make_ellipse):
	(make_polygon, make_polygon_from_integers):
	(make_pie): private functions (make_foo) to be reused by DrawFoo
	and FillFoo.
	
	(convert_fill_mode): Converts a GpFillMode to a cairo_fill_rule_t.

	(GdipDrawPie, GdipFillEllipse, GdipFillPolygon): Implemented.

2003-10-26  Duncan Mak  <duncan@ximian.com>

	* graphics.c
	(GdipSetRenderingOrigin, GdipGetRenderingOrigin): Implemented.

2003-10-25  Duncan Mak  <duncan@ximian.com>

	* graphics.c
	(GdipDrawBezier, GdipDrawBezierI):
	(GdipDrawBeziers, GdipDrawBeziersI):
	(GdipDrawLine, GdipDrawLineI):		
	(GdipDrawLines, GdipDrawLinesI): implemented.

	(GdipFillRectangle):
	(GdipDrawString): Make use of gdip_get_status.
	
	* general.c
	(gdip_get_status): A new function for retrieving a Status from a
	cairo_t.
	
2003-10-23  Miguel de Icaza  <miguel@ximian.com>

	* bitmap.c (GdipCreateBitmapFromScan0): Do not allocate buffer
	here, expect that our caller to allocate that.
	
	Do not compute the stride here, expect our caller to do this
	properly.

	* Use the Mono coding conventions.

2003-10-15  Alexandre Pigolkine <pigolkine@gmx.de>
	* image.c			GdipDrawImageRectI changed 
	
2003-10-14  Alexandre Pigolkine <pigolkine@gmx.de>
	* gdip_defs.h
	* graphics.c
	* gdip_main.h
						DrawString function added

2003-10-12  Alexandre Pigolkine <pigolkine@gmx.de>
	* bitmap.c
	* brush.c
	* gdip_defs.h
	* gdip_win32.c
	* gdip_win32.h
	* gdip_main.h
	* general.c
	* graphics.c
	* image.c
	* Makefile
	* pen.c
	* solidbrush.c
						Added
